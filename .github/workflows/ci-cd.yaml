name: CI/CD Pipeline to EKS

on:
  push:
    branches: [main]

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          npm install --save-dev jest
          npm test -- --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=Code-Paragon_Node.js-App-with-Prometheus-Monitoring
            -Dsonar.organization=code-paragon
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dockerize-and-push:
    needs: build-test-analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/node-monitoring:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-monitoring:latest --quiet

  deploy:
    needs: dockerize-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name myapp-eks-cluster --region ${{ secrets.AWS_REGION }}

      - name: Create imagePullSecret for private DockerHub
        run: |
          kubectl create secret docker-registry my-registry-key \
            --docker-username=${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-password=${{ secrets.DOCKERHUB_TOKEN }} \
            --docker-server=https://index.docker.io/v1/ \
            --namespace=default \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Set up Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Add Prometheus Community Helm repo
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Install Prometheus Operator via Helm
        run: |
          helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace || true
          echo "Waiting for CRDs to be ready..."
          sleep 60

      - name: Deploy to EKS
        run: kubectl apply -f k8s/k8s-config.yaml